{
  "name": "jheadx",
  "version": "0.0.8",
  "description": "`jhead` wrapper with extended functionality to batch fix photos lacking EXIF data",
  "licence": "GPL-3.0",
  "main": "index.js",
  "repository": "git@github.com:adrw/jheadx.git",
  "author": "adrw Andrew Alexander <account+npmjs@adrw.ch>",
  "bin": {
    "jheadx": "dist/index.js"
  },
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">= 0.2.0",
    "yarn": "YARN NO LONGER USED - use npm instead."
  },
  "dependencies": {
    "dayjs": "^1.10.4",
    "fs-extra": "^11.0.0",
    "inquirer": "^12.0.0",
    "klaw": "^4.0.0",
    "progress": "^2.0.3",
    "resemblejs": "^5.0.0",
    "shelljs": "0.10.0",
    "winston": "^3.2.1",
    "yargs": "^17.0.0"
  },
  "devDependencies": {
    "@misk/tslint": "0.4.1",
    "@types/fs-extra": "11.0.4",
    "@types/inquirer": "9.0.9",
    "@types/jest": "29.5.14",
    "@types/klaw": "3.0.7",
    "@types/node": "22.18.4",
    "@types/shelljs": "0.8.17",
    "@types/yargs": "16.0.9",
    "bdd-stdin": "0.2.0",
    "jest": "29.7.0",
    "tslib": "2.8.1",
    "ts-jest": "29.4.1",
    "typescript": "5.9.2"
  },
  "preferGlobal": true,
  "scripts": {
    "start": "node dist/index.js",
    "watch": "tsc -w",
    "build": "tsc",
    "test": "npm run-script reset && jest",
    "lint": "prettier --write --config package.json \".{/src/**/,/}*.{md,css,sass,less,json,js,jsx,ts,tsx}\"",
    "prepare": "npm run-script build && npm run-script test",
    "smooth-release": "smooth-release",
    "precommit": "npm run-script lint",
    "reset": "rm -rf img/match img/smallTest1 img/test && cd img && unzip original.zip && rm -rf __MACOSX && cp -r original match && mv original test && rm test/*[1-5]* && cp -r test smallTest1 && rm smallTest1/*[7-8]* && cp -r smallTest1 smallTest2"
  },
  "prettier": {
    "arrowParens": "avoid",
    "bracketSpacing": true,
    "jsxBracketSameLine": false,
    "printWidth": 80,
    "semi": false,
    "singleQuote": false,
    "tabWidth": 2,
    "trailingComma": "none",
    "useTabs": false
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(tsx?|jsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json",
      "jsx"
    ]
  }
}
